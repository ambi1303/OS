#include <stdio.h>

int main() {
    int n, burst[20], arrival[20], remaining[20], finish[20], waiting[20], turnaround[20];
    int complete = 0, t = 0, min = 999, shortest = 0;
    int total_waiting = 0, total_turnaround = 0, end_time;
    int found = 0;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        printf("Enter arrival time and burst time for process %d: ", i + 1);
        scanf("%d %d", &arrival[i], &burst[i]);
        remaining[i] = burst[i];
    }

    while (complete != n) {
        for (int i = 0; i < n; i++) {
            if (arrival[i] <= t && remaining[i] < min && remaining[i] > 0) {
                min = remaining[i];
                shortest = i;
                found = 1;
            }
        }
        if (!found) {
            t++;
            continue;
        }

        remaining[shortest]--;
        min = remaining[shortest];
        if (min == 0) min = 999;

        if (remaining[shortest] == 0) {
            complete++;
            end_time = t + 1;
            waiting[shortest] = end_time - burst[shortest] - arrival[shortest];
            if (waiting[shortest] < 0) waiting[shortest] = 0;
            turnaround[shortest] = waiting[shortest] + burst[shortest];
            total_waiting += waiting[shortest];
            total_turnaround += turnaround[shortest];
        }
        t++;
    }

    printf("\nProcess\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\n", i + 1, arrival[i], burst[i], waiting[i], turnaround[i]);
    }

    printf("\nAverage Waiting Time: %.2f", (float)total_waiting / n);
    printf("\nAverage Turnaround Time: %.2f", (float)total_turnaround / n);

    return 0;
}
